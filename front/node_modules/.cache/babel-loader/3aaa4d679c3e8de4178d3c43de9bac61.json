{"ast":null,"code":"import _toConsumableArray from\"/home/mariano/nuevoEcommerce/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/mariano/nuevoEcommerce/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";//importo todas las acciones como actionTypes\nimport*as actionTypes from\"../constants/cartConst\";var CART_INITIAL_STATE={cartItems:[]};export var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:CART_INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.ADD_TO_CART://item es el que nos llega del action.payload\nvar item=action.payload;//buscamos en el cartItems si el producto que tenemos en el array es igual al item\n//que  nos llega en el payload\nvar existItem=state.cartItems.find(function(elem){return elem.product===item.product;});if(existItem){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(elem){return elem.product===existItem.product?item:elem;})});}else{return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[item])});}case actionTypes.REMOVE_FROM_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(elem){return elem.product!==action.payload;})});default:return state;}};","map":{"version":3,"sources":["/home/mariano/nuevoEcommerce/front/src/redux/reducers/cartReducers.js"],"names":["actionTypes","CART_INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_TO_CART","item","payload","existItem","find","elem","product","map","REMOVE_FROM_CART","filter"],"mappings":"iPAAA;AACA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CACzBC,SAAS,CAAE,EADc,CAA3B,CAIA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAwC,IAAvCC,CAAAA,KAAuC,2DAA/BH,kBAA+B,IAAXI,CAAAA,MAAW,2CACjE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,WAAW,CAACO,WAAjB,CACE;AACA,GAAMC,CAAAA,IAAI,CAAGH,MAAM,CAACI,OAApB,CACA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAGN,KAAK,CAACF,SAAN,CAAgBS,IAAhB,CAChB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,OAAL,GAAiBL,IAAI,CAACK,OAAhC,EADgB,CAAlB,CAIA,GAAIH,SAAJ,CAAe,CACb,sCACKN,KADL,MAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBY,GAAhB,CAAoB,SAACF,IAAD,QAC7BA,CAAAA,IAAI,CAACC,OAAL,GAAiBH,SAAS,CAACG,OAA3B,CAAqCL,IAArC,CAA4CI,IADf,EAApB,CAFb,GAMD,CAPD,IAOO,CACL,sCACKR,KADL,MAEEF,SAAS,8BAAME,KAAK,CAACF,SAAZ,GAAuBM,IAAvB,EAFX,GAID,CACH,IAAKR,CAAAA,WAAW,CAACe,gBAAjB,CACE,sCACKX,KADL,MAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBc,MAAhB,CACT,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACC,OAAL,GAAiBR,MAAM,CAACI,OAAlC,EADS,CAFb,GAMF,QACE,MAAOL,CAAAA,KAAP,CA/BJ,CAiCD,CAlCM","sourcesContent":["//importo todas las acciones como actionTypes\nimport * as actionTypes from \"../constants/cartConst\";\n\nconst CART_INITIAL_STATE = {\n  cartItems: [],\n};\n\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      //item es el que nos llega del action.payload\n      const item = action.payload;\n      //buscamos en el cartItems si el producto que tenemos en el array es igual al item\n      //que  nos llega en el payload\n      const existItem = state.cartItems.find(\n        (elem) => elem.product === item.product\n      );\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((elem) =>\n            elem.product === existItem.product ? item : elem\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case actionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (elem) => elem.product !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}