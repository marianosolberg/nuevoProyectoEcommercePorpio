{"ast":null,"code":"//importamos todas las acciones como actionTypes\nimport * as actionTypes from \"../constants/cartConst\";\nexport const cartReducer = (state = {\n  cartItem: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      //item es el que nos llega del action.payload\n      const item = action.payload; //buscamos en el cartItem si el producto que tenemos en el array es igual al item\n      //que  nos llega en el payload\n\n      const existItem = state.cartItem.find(elem => elem.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItem: state.cartItem.map(elem => elem.product === existItem.product ? item : elem)\n        };\n      } else {\n        return { ...state,\n          cartItem: [...state.cartItem, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItem: state.cartItem.filter(elem => elem.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/mariano/nuevoEcommerce/front/src/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItem","action","type","ADD_TO_CART","item","payload","existItem","find","elem","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAT,EAA2BC,MAA3B,KAAsC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,WAAjB;AACE;AACA,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB,CAFF,CAGE;AACA;;AACA,YAAMC,SAAS,GAAGP,KAAK,CAACC,QAAN,CAAeO,IAAf,CACfC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBL,IAAI,CAACK,OADhB,CAAlB;;AAIA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGP,KADE;AAELC,UAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeU,GAAf,CAAoBF,IAAD,IAC3BA,IAAI,CAACC,OAAL,KAAiBH,SAAS,CAACG,OAA3B,GAAqCL,IAArC,GAA4CI,IADpC;AAFL,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGT,KADE;AAELC,UAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBI,IAApB;AAFL,SAAP;AAID;;AACH,SAAKP,WAAW,CAACc,gBAAjB;AACE,aAAO,EACL,GAAGZ,KADE;AAELC,QAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeY,MAAf,CACPJ,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBR,MAAM,CAACI,OAD1B;AAFL,OAAP;;AAMF;AACE,aAAON,KAAP;AA/BJ;AAiCD,CAlCM","sourcesContent":["//importamos todas las acciones como actionTypes\nimport * as actionTypes from \"../constants/cartConst\";\n\nexport const cartReducer = (state = { cartItem: [] }, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      //item es el que nos llega del action.payload\n      const item = action.payload;\n      //buscamos en el cartItem si el producto que tenemos en el array es igual al item\n      //que  nos llega en el payload\n      const existItem = state.cartItem.find(\n        (elem) => elem.product === item.product\n      );\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItem: state.cartItem.map((elem) =>\n            elem.product === existItem.product ? item : elem\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItem: [...state.cartItem, item],\n        };\n      }\n    case actionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItem: state.cartItem.filter(\n          (elem) => elem.product !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}